---

- set_fact:
    xmr_stak_cmake_args: "{{ xmr_stak_cmake_default_args }} -DOPENCL_ENABLED=OFF"
  when: not xmr_stak_amd_enabled

- name: Install dependencies
  apt:
    name: "{{ xmr_stak_packages }}"
    update_cache: no

- name: Checkout xmr-stak repo
  become: true
  git:
    dest: "{{ xmr_stak_src_path }}"
    repo: https://github.com/fireice-uk/xmr-stak.git
    update: "{{ update_xmr_stak | bool }}"
    force: yes
  register: xmr_stak_git_result
  tags:
    - xmr-stak

- debug:
    var: xmr_stak_git_result

- set_fact:
    update_xmr_stak: false
  when: xmr_stak_git_result.before == xmr_stak_git_result.after
  tags:
    - xmr-stak

- name: Adjust donation
  replace:
    path: "{{ xmr_stak_src_path }}/xmrstak/donate-level.hpp"
    regexp: "2.0 / 100.0"
    replace: "{{ xmr_stak_donate_amount }}"
  when: not xmr_stak_donate or xmr_stak_donate_amount is defined
  tags:
    - xmr-stak

- name: Remove old build
  file: state=absent path="{{ xmr_stak_src_path }}/build"
  when: update_xmr_stak | bool
  tags:
    - xmr-stak

- name: Create build dir
  file: state=directory path="{{ xmr_stak_src_path }}/build"
  tags:
    - xmr-stak

- name: Check for install
  shell: "xmr-stak --version"
  register: xmr_stak_version
  failed_when: "'error' in xmr_stak_version.stderr"
  tags:
    - xmr-stak

- debug:
    var: xmr_stak_version

- name: Configure
  shell: "cmake {{ xmr_stak_cmake_args }} ../ "
  args:
    creates: "{{ xmr_stak_src_path }}/build/cmake_install.cmake"
    chdir: "{{ xmr_stak_src_path }}/build"
  register: configured
  when: update_xmr_stak or xmr_stak_version.stdout == None
  tags:
    - xmr-stak

- name: Install
  become: true
  make:
    chdir: "{{ xmr_stak_src_path }}/build"
    params:
      NUM_THREADS: 4
    target: install
  when: (update_xmr_stak or xmr_stak_version.stdout == None) and configured.rc == 0
  register: installed
  tags:
    - xmr-stak

- name: Cleanup install
  become: true
  file:
    state: absent
    path: "/usr/local/bin/{{ item }}"
  with_items:
    - libxmr-stak-backend.a
    - libxmr-stak-c.a
  when: installed is defined and installed.changed
  tags:
    - xmr-stak

- name: Create config dirs
  file:
    state: directory
    path: "/usr/local/etc/xmr-stak/{{ item }}"
    owner: root
    group: adm
    mode: 0770
  with_items: "{{ xmr_stak_coins }}"
  tags:
    - xmr-stak

- name: Install miner config
  template:
    src: "templates/config.txt.j2"
    dest: "/usr/local/etc/xmr-stak/{{ item }}/config.txt"
    owner: root
    group: adm
    mode: 0640
    backup: yes
  with_items: "{{ xmr_stak_coins }}"
  tags:
    - xmr-stak
    - config

- name: Install AMD config
  template:
    src: "templates/amd.txt.j2"
    dest: "/usr/local/etc/xmr-stak/{{ item }}/amd.txt"
    owner: root
    group: adm
    mode: 0640
    backup: yes
  with_items: "{{ xmr_stak_coins }}"
  when: xmr_stak_amd_enabled
  tags:
    - xmr-stak
    - config

- name: Install pool config
  template:
    src: "templates/pools.txt.j2"
    dest: "/usr/local/etc/xmr-stak/{{ item }}/pools.txt"
    owner: root
    group: adm
    mode: 0640
    backup: yes
  with_items: "{{ xmr_stak_coins }}"
  tags:
    - xmr-stak
    - config

- name: Create logs dir
  file:
    path: "{{ xmr_stak_log_path }}"
    state: directory
    owner: root
    group: adm
    mode: 0770
  tags:
    - xmr-stak

- name: Reduce swappiness
  sysctl:
    name: vm.swappiness
    value: "5"
    state: present
    reload: yes
  tags:
    - xmr-stak

- name: Set hugepages
  sysctl:
    name: vm.nr_hugepages
    value: "128"
    state: present
    reload: yes
  tags:
    - xmr-stak

- name: Set ulimits
  template:
    src: templates/limits.conf.j2
    dest: /etc/security/limits.conf
    backup: yes
  tags:
    - xmr-stak
